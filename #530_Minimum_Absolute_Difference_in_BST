class TreeNode(object):
    def __init__(self,x):
        self.val = x
        self.left = None
        self.right = None

def getMinimumDifference(root):
    list = []
    list = getList(root,list)
    diff = 9999
    for i in range(1,len(list)):
        diff = min(diff,list[i] - list[i-1])
    return diff

def getList(root,list):
    if root.left is not None:
        getList(root.left,list)
    list.append(root.val)
    if root.right is not None:
        getList(root.right,list)
    return list

class Solution(object):
    diff = 9999
    prev = None
    def getMinimumDifference_2(self,root):
        if root is None:
            return self.diff
        self.getMinimumDifference_2(root.left)
        if self.prev != None:
            self.diff = min(self.diff,root.val - self.prev)
        self.prev = root.val
        self.getMinimumDifference_2(root.right)
        return self.diff

